# Syntactic Rules

program
  : expr ( `;` expr )* `;`?

expr
  : expr ( REL_OP expr )+           # Relations
  | expr ( `+` | `-` ) expr         # Terms
  | expr ( `*` | `/` | `%` ) expr   # Factors
  | `-` expr                        # Negation
  | expr `^` expr                   # Exponents
  | `(` expr `)`                    # Parenthesis
  | IDENT                           # Identifiers
  | INT | REAL | BOOL               # Literals

# Lexical Rules

REL_OP : `<` | `>` | `<=` | `>=` | `==` | `!=`

IDENT : `_`
BOOL  : `true` | `false`
REAL  : DIGIT_DEC+ ( `.` DIGIT_DEC+ )?

INT : DEC | BIN | HEX
DEC : DIGIT_DEC (DIGIT_DEC | DIGIT_SEP)*
BIN : `0b` (DIGIT_BIN | DIGIT_SEP)* DIGIT_BIN (DIGIT_BIN | DIGIT_SEP)*
HEX : `0x` (DIGIT_HEX | DIGIT_SEP)* DIGIT_HEX (DIGIT_HEX | DIGIT_SEP)*

DIGIT_SEP : `_`
DIGIT_DEC : [0-9]
DIGIT_BIN : [0-1]
DIGIT_HEX : [0-9|a-f|A-F]

BLANKS : [ \t\v\f\r\n]+ -> ignored
